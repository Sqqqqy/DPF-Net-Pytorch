import numpy as np
from tqdm import tqdm
color_list = ["255 0 0","0 255 0","0 0 255","255 255 0","255 0 255","0 255 255",
            "180 180 180", "100 100 100",
            "255 128 128","128 255 128","128 128 255","255 255 128","255 128 255","128 255 255",
            "180 100 255","100 180 255"] + ["240 0 0","0 240 0","0 0 240","240 240 0","240 0 240","0 240 240",
            "200 200 200", "60 60 60",
            "240 140 140","140 240 140","140 140 240","240 240 140","240 140 240","140 240 240",
            "200 60 240","60 200 240"]

color_map = {}
for i in range(len(color_list)):
    color_map[color_list[i]] = i
group_set = {}
for kk in tqdm(range(700)):
    with open(f"/gpfs/home/sist/cq14/kBAE/code/deformed_primitive_field/output/dpf_table/deformed_primitive_field_best_16cylinder/visualize_results_best_16cylinder/segmentation_results_ori/sample_{kk}_shapenet_recon.ply", 'r') as f:
        lines = f.readlines()
        num_points = int(lines[2].split(' ')[-1]) // 2
        points = [line.strip().split(' ') for line in lines[10:]]
        
        pc1 = points[:num_points]
        pc2 = points[num_points:]
        
        for i in range(num_points):
            gt_label = pc2[i][3]+' '+pc2[i][4]+' '+pc2[i][5]
            pred_label = pc1[i][3]+' '+pc1[i][4]+' '+pc1[i][5]

            gt_label = color_map[gt_label]
            pred_label = color_map[pred_label]

            if not group_set.__contains__(gt_label):
                group_set[gt_label] = {}
            else:
                if not group_set[gt_label].__contains__(pred_label):
                    group_set[gt_label][pred_label] = 1
                else:
                    group_set[gt_label][pred_label] += 1

        # for key in group_set.keys():
        #     group_set[key] = set(group_set[key])

print(group_set)

#airplane
# {0: {14: 261786, 13: 24377, 11: 72567, 4: 5881, 7: 19794, 6: 3019, 12: 77, 8: 763, 1: 21, 3: 195, 9: 69, 5: 22, 2: 6, 0: 4}, 
# 2: {13: 40064, 7: 41240, 8: 13701, 14: 6708, 4: 509, 6: 347, 5: 35, 9: 24, 11: 1048, 1: 4, 12: 17, 3: 32}, 
# 1: {4: 84024, 6: 77157, 11: 59526, 14: 3613, 7: 8235, 13: 164, 8: 215, 5: 579, 9: 1179, 1: 395, 12: 74, 3: 74}, 
# 3: {11: 33867, 4: 2537, 6: 2410, 14: 3499, 9: 2002, 5: 1989, 12: 266, 7: 8525, 3: 303, 13: 303, 8: 146, 1: 4}}

# {14:0, 13:2, 7:2, 8:2, 4:1, 6:1, 11:3,}
{0: {4: 353309, 9: 20502, 14: 3577, 8: 7463, 13: 3728, 2: 1, 1: 1}, 
2: {8: 64763, 4: 30539, 9: 7526, 13: 487, 14: 414}, 
1: {13: 81029, 14: 79364, 9: 51026, 4: 22177, 8: 1639}, 
3: {9: 36006, 14: 4050, 4: 11236, 13: 3837, 8: 722}}
{4:0, 8:2, 13:1, 14:1, 9:3}
#chair
# best
{0: {15: 452406, 2: 135788, 9: 22567, 12: 2662, 13: 38072, 10: 3259, 4: 2515, 0: 2060, 6: 777, 1: 29, 5: 99, 7: 25}, 
1: {9: 688376, 7: 6598, 10: 5423, 15: 33835, 12: 3618, 5: 8787, 13: 2068, 4: 4158, 0: 3045, 6: 9523, 2: 2138, 1: 327}, 
2: {5: 81377, 12: 79183, 7: 79128, 10: 80689, 15: 6800, 13: 1396, 9: 26100, 6: 60305, 4: 1077, 0: 1073, 2: 345, 1: 106}, 
3: {0: 15672, 4: 15687, 9: 8406, 15: 2369, 7: 894, 5: 753, 10: 283, 6: 886, 12: 235, 13: 164, 2: 169}}

{15:0, 2:0, 13:0, 9:1, 5:2, 12:2, 7:2, 10:2, 6:2, 0:3, 4:3}
# best_8_8
{0: {1: 577893, 2: 17407, 10: 38083, 8: 17592, 12: 3064, 6: 1885, 5: 2171, 0: 1533, 3: 598, 14: 33}, 
1: {10: 692097, 2: 8640, 8: 6673, 1: 19863, 14: 6974, 6: 2933, 3: 7581, 0: 10722, 12: 3425, 5: 8871, 13: 34, 9: 17, 4: 9, 7: 6, 11: 24, 15: 27}, 
2: {14: 85722, 8: 84235, 3: 86642, 10: 34030, 2: 87311, 0: 35161, 1: 2762, 6: 549, 12: 1043, 9: 6, 13: 7, 15: 12, 11: 19, 5: 75, 4: 5}, 
3: {12: 15460, 6: 10895, 10: 8994, 3: 4109, 1: 3297, 14: 470, 8: 322, 2: 213, 0: 959, 5: 799}}
{1:0, 10:1, 14:2, 8:2, 3:2, 2:2, 0:2, 12:3, 6:3}
# best cylinder16
{0: {1: 301069, 11: 310956, 14: 5071, 10: 37761, 2: 5152, 5: 52, 12: 157, 6: 41}, 
1: {10: 718826, 2: 4796, 11: 18697, 14: 12579, 5: 5529, 12: 4593, 6: 255, 3: 89, 1: 2531, 8: 1}, 
2: {12: 77446, 2: 81397, 5: 81374, 10: 33200, 14: 139256, 11: 3951, 1: 815, 3: 97, 6: 43}, 
3: {10: 39311, 11: 1546, 5: 1032, 2: 538, 14: 1062, 12: 1102, 1: 890, 6: 35, 3: 2}}
{1:0, 11:0, 10:1, 12:2, 2:2, 5:2, 14:2}
# table
{0: {12: 1070458, 5: 6978, 13: 33296, 11: 59, 10: 114547, 14: 20629, 8: 10393, 3: 6748, 1: 15695, 7: 6011, 2: 15145, 4: 1067, 9: 25, 0: 6, 15: 4},
1: {13: 73307, 5: 55647, 4: 56484, 1: 92242, 14: 91102, 7: 55507, 10: 2395, 12: 15070, 2: 217, 11: 67, 3: 292, 8: 213, 9: 72, 0: 23, 15: 3}, 
2: {13: 23222, 12: 17399, 1: 38586, 4: 10664, 14: 34928, 7: 13321, 5: 18094, 11: 295, 3: 1309, 8: 468, 10: 1715, 2: 152, 6: 2, 15: 7, 9: 5, 0: 2}}

{12:0, 10:0, 8:0, 2:0}